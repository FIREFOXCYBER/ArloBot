# Note, the port where your Propeller is plugged in can be found with a script now,
# This is in the scripts folder called ~/catkin_ws/src/ArloBot/scripts/find_ActivityBoard.sh
# So you can run this to set the port once roscore is started, but before starting Arlobot:
# rosparam set /arlobot/port $(~/catkin_ws/src/ArloBot/scripts/find_ActivityBoard.sh)
#port: /dev/ttyUSB1
# I alwyas use 115200 for the ActivityBoard
baudRate: 115200
# trackwidth [m], distancePerCount [m]
# http://learn.parallax.com/activitybot/calculating-angles-rotation
# Distance Per Tick for Arlo: http://forums.parallax.com/showthread.php/154274-The-quot-Artist-quot-robot?p=1271544&viewfull=1#post1271544
# Track Width for Arlo is from measurement and then testing
# You can customize this if you think you have better numbers please post a note in GitHub for me!
# HB-25 numbers;
#driveGeometry: {trackWidth: 0.403, distancePerCount: 0.00676}
# DHB-10 numbers:
driveGeometry: {trackWidth: 0.403, distancePerCount: 0.00338}
# Note that updates to tracWidth & distancePerCount will be sent to the robot in real time.
# Set usbRelayInstalled to False if you do not have a USB Relay installed to turn your motors on and off,
# In which case it will be assumed they are always on, or at least that you turn them on by hand
# This is the board I use: http://www.sainsmart.com/sainsmart-4-channel-12-v-usb-relay-board-module-controller-for-automation-robotics-1.html
# and there are several other models that should all work. File an issue if you need me to help modify the program to include your board
usbRelayInstalled: False
# The other usbRelay... settings do not matter if usbRelayInstalled is False
# For the port numbers and other specics about the USB Realy setup see and chnage arlobot_usbrelay/param/usbrelay.yaml
# Get this serial number running ~/arlobot/src/arlobot/arlobot_bringup/scripts/drcontrol.py -l
# Actually the serial number is now pulled programatically.
#usbRelaySerialNumber: "A9026EI5"
# You can connect the motors to any relay you want, and just put them here.
# I use 6 and 2 based on the wiring location and that those two do not cycle when the laptop boots
usbLeftMotorRelay: "6"
usbRightMotorRelay: "2"
# Labels for Left and Right motors. These are set in arlobot_usbrelay/param/usbrelay.yaml
usbLeftMotorRelayLabel: "LeftMotor"
usbRightMotorRelayLabel: "RightMotor"
# WARNING: BY DEFAULT YOUR ROBOT WILL TRY TO MOVE EVEN WHEN IT IS PLUGGED IN!!!!
# Set monitorACconnection to True to have ROS monitor the power connection and FREEZE
# the robot whenever the laptop is plugged into AC power
monitorACconnection: False
# Set ignoreProximity to have robot ignore the proximity sensors
# and simply operate 100% under ROS control.
# This should also work if changed on the fly.
ignoreProximity: False
# If you have Cliff sensors, you can use this to tell the Activity Board
# to ignore them.
ignoreCliffSensors: False
# Use this to tell the Activity Board to ignore JUST the IR sensors,
# while still utilizing the PING sensors
# NOTE this will not ignore the IR Cliff Sensors. Use ignoreCliffSensors to do that.
ignoreIRSensors: False
# Use this to tell the Activity Board to ignore JUST the Floor sensors,
# while still utilizing the PING sensors
ignoreFloorSensors: False
